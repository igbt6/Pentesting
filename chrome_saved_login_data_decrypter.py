#!/usr/bin/env python
import sys
import os
import win32crypt
import sqlite3
from datetime import datetime
PY2 = sys.version_info[0] == 2
if PY2:
    raise Exception("Please use finally Python3.x version :)")

'''==================== DESCRIPTION ===================='''
# Script decrypts all logins and passwords stored in Chrome on windows.
# Chrome uses the winAPI: CryptProtectData(from winCrypt, https://msdn.microsoft.com/pl-pl/en-en/library/windows/desktop/aa380261(v=vs.85).aspx)
# to encrypt passwords. To decrypt them you need to use CryptUnprotectData function :)
# Db file that stores all the passwords and login data exists at: %USER%\\AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data   
'''==================== DESCRIPTION-END =================='''    


'''==================== USAGE ===================='''
# 1. pip install pypiwin32 or download the package from https://sourceforge.net/projects/pywin32/
# look at the main method
'''====================  USAGE-END =================='''

'''==================== GLOBAL SETTINGS ===================='''
LOGIN_DATA_DB_PATH= os.path.join(os.environ["LOCALAPPDATA"],"Google\\Chrome\\User Data\\Default\\Login data")
'''==================== GLOBAL SETTINGS-END =================='''
        

def main():
    t1= datetime.now()
    if(not os.path.isfile(LOGIN_DATA_DB_PATH)):
        raise ValueError(LOGIN_DATA_DB_PATH + "db file does not exist on this PC")
    encryptedData=0
    try:
        conn = sqlite3.connect(LOGIN_DATA_DB_PATH)
        cursor= conn.cursor()
        cursor.execute("SELECT action_url, username_value, password_value FROM logins")
        encryptedData = cursor.fetchall()
    except Exception as e:
        print("[ERROR]: %s"%e)
        print("Database file reading has failed")
        sys.exit(1)  
    decryptedData=[]
    for login_data in encryptedData:
        try:
            decryptedPass=win32crypt.CryptUnprotectData(login_data[2],None,None,None,1)#decrypt pass
        except Exception as e:
            print("[ERROR]: %s"%e)
            print("Password has not been not decrypted correctly")
        decryptedData.append((login_data[0],login_data[1],decryptedPass[1]))   
    
    if len(decryptedData)>0:
        printData(decryptedData,1)
    else:        
        print("No password has been decrypted")
        printData(encryptedData)

        
def printData(loginData,deOrEncrypted=0):
    if not deOrEncrypted:
        print("----LOGIN DATA ENCRYPTED----")
    else:
        print("----LOGIN DATA DECRYPTED----")
    for data in loginData:
        print("URL: %s, LOGIN: %s, PASS: %s"%(data[0],data[1],data[2]))
            
if __name__ == '__main__':
    try:
        main()
    except Exception as e:
        print("[ERROR]: %s"%e)
        
